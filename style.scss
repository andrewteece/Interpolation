$red: red;
$green: green;
$blue: blue;
$width: 100;

$clr-primary: steelblue;
$clr-secondary: dodgerblue;
$clr-accent: limegreen;

/* WITHOUT MIXIN */

.box {
  aspect-ratio: 1 / 1;

  &-#{$red}-100 {
    background: $red;
    width: $width;
  }
  &-#{$green}-150 {
    background: $green;
    width: $width * 1.5;
  }
  &-#{$blue}-200 {
    background: $blue;
    width: $width * 2;
  }
}

/* WITH MIXIN */

@mixin box($color, $multiply: 1) {
  .box-#{$color}-#{$multiply * $width} {
    aspect-ratio: 1 / 1;
    background-color: $color;
    width: $width * $multiply * 1rem;
  }
}

@include box($red);
@include box($green, 1.5);
@include box($blue, 2);

/* Extends and Mixins */

%extend-bold-text {
  font-weight: bold;
}

@mixin mixin-uppercase-text {
  text-transform: uppercase;
}

.accent-text {
  font-size: 1.125rem;
  @extend %extend-bold-text;
  @include mixin-uppercase-text();
}

.in-your-face-text {
  font-size: 4rem;
  @extend %extend-bold-text;
  @include mixin-uppercase-text();
}

/* Selector inside of Mixins */

@mixin small-uppercase-span {
  span {
    font-size: 1rem;
    text-transform: uppercase;
  }
}

.page-title {
  font-size: 4rem;
  line-height: 1.1;
  @include small-uppercase-span();
}

@mixin inverted-colors {
  color: white;
  background: black;

  a {
    color: yellow;
  }

  &__title {
    font-size: 2.5rem;
    color: #f07178;
  }
}

.call-to-action {
  @include inverted-colors();
}

/* Mixins with Arguments */

@mixin button($bg) {
  background: $bg;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  font-weight: 700;
}

.btn--accent {
  @include button($bg: blue);
}

.btn--inverted {
  @include button($bg: white);
  color: black;
}

@mixin button2($bg, $color) {
  background: $bg;
  color: $color;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  font-weight: 700;
}

.btn-primary {
  @include button2($clr-primary, #fff);
}

.btn-secondary {
  @include button2($clr-secondary, black);
}

.btn-accent--1 {
  @include button2($clr-accent, yellow);
}

.btn-primary-1 {
  @include button2($clr-primary, white);
}

/* Mixin with Optional Arguments */

@mixin linear-gradient($deg: -45deg, $clr-1: red, $clr-2: blue) {
  background-image: linear-gradient($deg, $clr-1, $clr-2);
}

.hero {
  padding: max(10vh, 5rem);
  @include linear-gradient($deg: -90deg);
}

.call-to-action {
  @include linear-gradient($clr-2: yellow);
}

.hero--accent {
  @include linear-gradient(-65deg, green, gold);
}
